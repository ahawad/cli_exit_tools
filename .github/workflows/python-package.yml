# This workflow will install Python dependencies, run tests and lint with a variety of Python versions
# For more information see: https://help.github.com/actions/language-and-framework-guides/using-python-with-github-actions

name: Python package

on:
  push:
    branches: [ master, development ]
  pull_request:
    branches: [ master, development ]

jobs:

  build:
    runs-on: ${{ matrix.os }}

    env:
        # prefix before commands - used for wine, there the prefix is "wine"
        cPREFIX: ""
        # command to launch python interpreter (its different on macOs, there we need python3)
        cPYTHON: "python"
        # command to launch pip (its different on macOs, there we need pip3)
        cPIP: "python -m pip"
        # switch off wine fix me messages
        WINEDEBUG: fixme-all

        # PYTEST
        PYTEST_DO_TESTS: "True"

        # FLAKE8 tests
        DO_FLAKE8_TESTS: "True"

        # MYPY tests
        MYPY_DO_TESTS: "True"
        MYPY_OPTIONS: "--follow-imports=normal --implicit-reexport --no-warn-unused-ignores --strict"
        MYPYPATH: "./cli_exit_tools/3rd_party_stubs"

        # coverage
        DO_COVERAGE: "True"
        DO_COVERAGE_UPLOAD_CODECOV: "True"
        DO_COVERAGE_UPLOAD_CODE_CLIMATE: "True"

        # package name
        PACKAGE_NAME: "cli_exit_tools"
        # the registered CLI Command
        CLI_COMMAND: "cli_exit_tools"
        # the source file for rst_include (rebuild rst file includes)
        RST_INCLUDE_SOURCE: "./.docs/README_template.rst"
        # the target file for rst_include (rebuild rst file includes)
        RST_INCLUDE_TARGET: "./README.rst"

    strategy:
      matrix:
        include:
          - os: windows-latest
            python-version: 3.9
            env:
              BUILD_DOCS: "False"
              DEPLOY_SDIST: "False"
              DEPLOY_WHEEL: "False"
              DEPLOY_TEST: "False"
              MYPY_DO_TESTS: "True"

          - os: ubuntu-latest
            python-version: 3.6
            env:
              BUILD_DOCS: "False"
              DEPLOY_SDIST: "True"
              DEPLOY_WHEEL: "True"
              DEPLOY_TEST: "True"
              MYPY_DO_TESTS: "True"

          - os: ubuntu-latest
            python-version: 3.7
            env:
              BUILD_DOCS: "False"
              DEPLOY_SDIST: "True"
              DEPLOY_WHEEL: "False"
              DEPLOY_TEST: "True"
              MYPY_DO_TESTS: "True"

          - os: ubuntu-latest
            python-version: 3.8
            env:
              BUILD_DOCS: "True"
              DEPLOY_SDIST: "True"
              DEPLOY_WHEEL: "True"
              DEPLOY_TEST: "True"
              MYPY_DO_TESTS: "True"

          - os: ubuntu-latest
            python-version: 3.9
            env:
              BUILD_DOCS: "False"
              DEPLOY_SDIST: "True"
              DEPLOY_WHEEL: "True"
              DEPLOY_TEST: "True"
              MYPY_DO_TESTS: "True"

          - os: ubuntu-latest
            python-version: pypy-3.7
            env:
              BUILD_DOCS: "False"
              DEPLOY_SDIST: "True"
              DEPLOY_WHEEL: "True"
              DEPLOY_TEST: "True"
              MYPY_DO_TESTS: "False"

          - os: macos-latest
            python-version: 3.9
            run: |
              export "cTEST=cTEST"
            env:
              # cTEST: "cTEST"
              cPREFIX: ""               # prefix before commands - used for wine, there the prefix is "wine"
              cPYTHON: "python3"        # command to launch python interpreter (its different on macOs, there we need python3)
              cPIP: "python3 -m pip"    # command to launch pip (its different on macOs, there we need pip3)
              BUILD_DOCS: "False"
              DEPLOY_SDIST: "False"
              DEPLOY_WHEEL: "False"
              DEPLOY_TEST: "True"
              MYPY_DO_TESTS: "True"

    steps:
    # see : https://github.com/actions/checkout
    - uses: actions/checkout@v2

    - name: Set up Python ${{ matrix.python-version }}
      uses: actions/setup-python@v2
      with:
        python-version: ${{ matrix.python-version }}

    - name: Install dependencies
      # see: https://github.community/t/github-actions-new-bug-unable-to-create-environment-variables-based-matrix/16104/3
      env: ${{ matrix.env }}             # make matrix env variables accessible
      run: |
        ${{ env.cPIP }} install lib_travis
        log_util --colortest
        lib_travis install

    - name: TestScript
      env:
        ${{matrix.env }}             # make matrix env variables accessible
        BRANCH: $(lib_travis get_branch)

      run: |
        log_util --level=NOTICE --banner "working on branch ${BRANCH}"
        # stop the build if there are Python syntax errors or undefined names
        flake8 . --count --select=E9,F63,F7,F82 --show-source --statistics
        # exit-zero treats all errors as warnings. The GitHub editor is 127 chars wide
        flake8 . --count --exit-zero --max-complexity=10 --max-line-length=127 --statistics

    - name: Test with pytest
      run: |
        pytest
